import { FetchResult } from '@apollo/client';
import { useMutation } from '@apollo/client';
import { <%=camelToUpper(name)%> } from './use<%=capitalize(name)%>.graphql';

export interface IUse<%=capitalize(name)%> {
  <%=name%>: (<%=variablesToTSJoinComa(variables)%>) => Promise<FetchResult<IData>>;
}

interface IData {
  boilerplate_<%=name%>: [];
}

interface IVariables {
<%=variablesToTypescript(variables)%>
}

export const use<%=capitalize(name)%> = (): IUse<%=capitalize(name)%> => {
  const [mutate] = useMutation<IData, IVariables>(<%=camelToUpper(name)%>);
  return { <%=name%>: (<%=variablesJoinComa(variables)%>) => mutate({ variables: { <%=variablesJoinComa(variables)%> } }) };
};
