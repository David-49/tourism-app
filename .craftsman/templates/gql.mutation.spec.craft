import { renderHook } from '@testing-library/react-hooks';
import { ApolloMockedProvider, mutationsMocks } from '../../../../mocks/client';
import { use<%=capitalize(name)%> } from '../use<%=capitalize(name)%>.hook';

describe('use<%=capitalize(name)%>', () => {
  it('should call the mutation <%=name%> with the correct parameters', async () => {
    const { result } = renderHook(() => use<%=capitalize(name)%>(), { wrapper: ApolloMockedProvider });

    await result.current.<%=name%>(<%-variablesToValue({variables})%>);

    expect(mutationsMocks.resource.boilerplate_<%=name%>).toHaveBeenCalled();
  });
});

